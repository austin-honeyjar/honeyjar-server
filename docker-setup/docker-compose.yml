version: '3.8'

services:
  server:
    build:
      context: ..
      dockerfile: docker-setup/Dockerfile.dev
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:Password1@db:5432/client_db
      - CLERK_SECRET_KEY=sk_test_YB62TvY7FX1Y91385BJx2HcC50VKWhn2dBY0cmLk9n
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - TZ=UTC
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ..:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Password1
      - POSTGRES_DB=client_db
      - TZ=UTC
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    environment:
      - TZ=UTC
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data: 